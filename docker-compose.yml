version: '3.8'

services:
  elasticsearch:
    image: elasticsearch:8.15.0
    container_name: elasticsearch
    volumes:
      - type: bind
        source: ./elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: false
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
    environment:
      ES_JAVA_OPTS: "-Xmx1024m -Xms1024m"
      ELASTIC_PASSWORD: DzxTaAG2MDb1KjZneNFQ
      discovery.type: single-node
    networks:
      elk:
        ipv4_address: 192.168.136.2

  logstash:
    image: logstash:8.15.0
    container_name: logstash
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: false
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: false
    ports:
      - "5000:5000"
      - "10514:10514"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTICSEARCH_SERVICEACCOUNT_TOKEN: "AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS10b2tlbjo3akQ2MmptZVJNdUxaVzN4R3ZQUXln"
    networks:
      elk:
        ipv4_address: 192.168.136.3
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.15.0
    container_name: kibana
    volumes:
      - type: bind
        source: ./kibana/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: false
    ports:
      - "5601:5601"
    healthcheck:
      test: ["CMD", "curl --silent --fail localhost:5601/status || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
    networks:
      elk:
        ipv4_address: 192.168.136.4
    depends_on:
      - elasticsearch
  
  ubuntu-server:
    build: ./ubuntu-server
    container_name: ubuntu-server
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
    networks:
      elk:
        ipv4_address: 192.168.136.5

  hydra-server:
    build: ./hydra
    container_name: hydra-server
    networks:
      elk:
        ipv4_address: 192.168.136.6
  
networks:
  elk:
    driver: bridge
    ipam:
      config: 
        - subnet: 192.168.136.0/24
          gateway: 192.168.136.1
    
volumes:
  elasticsearch: